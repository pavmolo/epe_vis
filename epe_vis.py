import streamlit as st
import pandas as pd
import uuid
from fpdf import FPDF
import base64
import plotly.express as px

work_minutes = st.number_input("–†–∞–±–æ—á–∏—Ö –º–∏–Ω—É—Ç –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è –≤ —Å—É—Ç–∫–∏", 0)

if "rows" not in st.session_state:
    st.session_state["rows"] = []

rows_collection = []

def add_row():
    element_id = uuid.uuid4()
    st.session_state["rows"].append(str(element_id))


def remove_row(row_id):
    st.session_state["rows"].remove(str(row_id))


def generate_row(row_id):
    row_container = st.empty()
    row_columns = row_container.columns((5, 3, 3, 3, 1))
    row_name = row_columns[0].text_input("SKU –Ω–∞ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–∏", key=f"txt_{row_id}")
    row_qty = row_columns[1].number_input("–î–Ω–µ–≤–Ω–æ–π —Å–ø—Ä–æ—Å", step=1, key=f"nbr_{row_id}")
    row_cycle = row_columns[2].number_input("–í—Ä–µ–º—è —Ü–∏–∫–ª–∞", step=2, key=f"time_{row_id}")
    row_co = row_columns[3].number_input("–í—Ä–µ–º—è –ø–µ—Ä–µ–Ω–∞–ª–∞–¥–∫–∏", step=3, key=f"co_{row_id}")
    row_columns[4].button("üóëÔ∏è", key=f"del_{row_id}", on_click=remove_row, args=[row_id])
    return {"name": row_name, "qty": row_qty, "cycle": row_cycle, "co": row_co}

st.title("–î–∞–Ω–Ω—ã–µ –ø–æ SKU –Ω–∞ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–∏")

for row in st.session_state["rows"]:
    row_data = generate_row(row)
    rows_collection.append(row_data)

menu = st.columns(2)

with menu[0]:
    st.button("Add Item", on_click=add_row)
    
if len(rows_collection) > 0:
    st.subheader("–î–∞–Ω–Ω—ã–µ")
    data = pd.DataFrame(rows_collection)
    data.rename(columns={"name": "SKU", "qty": "–î–Ω–µ–≤–Ω–æ–π —Å–ø—Ä–æ—Å", "cycle": "–í—Ä–µ–º—è —Ü–∏–∫–ª–∞", "co": "–í—Ä–µ–º—è –ø–µ—Ä–µ–Ω–∞–ª–∞–¥–∫–∏"}, inplace=True)
    st.dataframe(data=data, use_container_width=True)
    st.bar_chart(data=data, x="SKU", y="–î–Ω–µ–≤–Ω–æ–π —Å–ø—Ä–æ—Å")
    co_in_a_day = work_minutes - (data['–î–Ω–µ–≤–Ω–æ–π —Å–ø—Ä–æ—Å'] * data['–í—Ä–µ–º—è —Ü–∏–∫–ª–∞']).sum()
    co_time_in_epe = data['–í—Ä–µ–º—è –ø–µ—Ä–µ–Ω–∞–ª–∞–¥–∫–∏'].sum()
    epe = co_time_in_epe / co_in_a_day
    
    timeline_data = (data['–î–Ω–µ–≤–Ω–æ–π —Å–ø—Ä–æ—Å'] / epe).astype('int')
    st.dataframe(data=timeline_data, use_container_width=True)
    
    st.title(f"–í—Ä–µ–º–µ–Ω–∏ –æ—Å—Ç–∞–µ—Ç—Å—è –Ω–∞ –ø–µ—Ä–µ–Ω–∞–ª–∞–¥–∫–∏ –≤ –¥–µ–Ω—å: {co_in_a_day} –º–∏–Ω—É—Ç")
    st.title(f"–í—Ä–µ–º–µ–Ω–∏ –ø–µ—Ä–µ–Ω–∞–ª–∞–¥–∫–∏ –≤ —Ü–∏–∫–ª–µ EPE: {co_time_in_epe} –º–∏–Ω—É—Ç")
    st.title(f"EPE = {epe} –¥–Ω–µ–π")
    
    



